Last Lecture Agenda
1 Spring AOP 

Spring AOP:
	- AOP: Implementation of cross cutting concerns without modifying core BL.
	- Pre-processing & Post-processing
	- In JavaEE it is implemented using Filters.
	- In Java it can be implmented using Aspect/J framework (@EnableAspectJAutoProxy,@Aspect)
	- In Spring AOP is implemented in spring-aop package/module. It is wrapper on Aspect/J library.
	- AOP is an approach which supports OOP
	- AOP breaking down program logic into distinct parts so it is called concerns
	- The functions that span multiple points of an application are called cross-cutting concerns and these cross-cutting concerns are conceptually separate from the application's business logic.
	- e.g logging, auditing, declarative transactions, security, caching, etc.
	- AOP is like triggers in programming languages such as Perl, .NET, Java, and others.
	- Spring AOP module provides interceptors to intercept an application. For example, when a method is executed, you can add extra functionality before or after the method execution.
	
	AOP Terminology
		- Aspect 
			An aspect is a class that implements enterprise application concerns that cut across multiple classes, such as transaction management. Aspects can be a normal class configured through Spring XML configuration or we can use Spring AspectJ integration to define a class as Aspect using @Aspect annotation. It will contain one or more advices implementations.
		- JoinPoint
			A join point is a specific point in the application such as method execution, exception handling, changing object variable values, etc. In Spring AOP a join point is always the execution of a method.
			You can also say, it is the actual place in the application where an action will be taken using Spring AOP framework.
		- Advice - (advice->What should be called)
			Advices are actions taken for a particular join point.In terms of programming, they are methods that get executed when a certain join point with matching pointcut is reached in the application, such as filters in servlet. 
			Advice represents an action taken by an aspect at a particular join point. There are different types of advices:
			
			1 @After
				An advice that gets executed after the join point method finishes executing, whether normally or by throwing an exception, In short it work like as finally block in core java.
			2 @Before - 
				These advices runs before the execution of join point methods( methods you speicify)
			3 @Arround
				This is the most important and powerful advice. This advice surrounds the join point method and we can also choose whether to execute the join point method or not. We can write advice code that gets executed before and after the execution of the join point method.
				Sequance- call @before->perform logic->proceed further Your joinpoint method works->@After call->perform logic->Point cut means to stop the execution of that method.

2 Aspects 

summary & Interview Questions
1 What is AOP 
2 Explain Various AOP Aspects 

Today's Lecture Agenda
1 Rest Vs Soap
	+ REST 
		- Typically REST works on top of HTTP protocol
		- Can be accessed from any device which has internet connection.
		- REST is lightweight (than SOAP)
			- gives freedom -- XML or JSON -- JSON is preferred.
			- JSON processing is lighter.
			- JSON needs less data

	+ SOAP 
		- SOAP services gives XML data 
		- Can be accessed & processing XML data needs more device config.
			- XML processing is heavy
			- XML needs more data

2 Http Request 
	It has 2 part 
	1 Http header
		method
		ip
		data & time 
		Content Type 
			- text/html
			- json
			- pdf
			- doc
			- image 
		auth token 
		
	2 Http body 
		data 
			- json
			- text 
			- xml 
		
	
& 
Http Response
		
		1 Http header
		method
		ip
		data & time 
		Content Type 
			- text/html
			- json
			- pdf
			- doc
			- image 
		auth token 
		
		HTTP Status code:
					1 2xx=> 200-299 --> success e.g. 200 (success/OK)
					2 3xx 300-399 --> redirection e.g. 302 (http redirection)resource move to other
					3 4xx  400-499 --> client side errors e.g. 403 (forbidden), 404 (not found), 400 (Bad Request) ...	
					4 5xx 500-599 --> server errors Whenever there is problem on server side this series is used			
			
			
		
	2 Http body 
		data 
			- json
			- text 
			- xml 
		
	
3 Json Object
	- Java Script Object Notation 
	- It store data in the key & Value format 
	
	{
		"id":"9",
		"fname":"Sumit",
		"lname":"Raokhande"
	}
	dot operator (.)
	jacksonapi.jar 
	
4 Array Of Object
5 Spring Boot Application
6 postman 

summary & Interview Questions
1 Explain Http Request & Http Response
2 Difference between Rest & Soap
3 How to create Json Object
4 How to create array of object


